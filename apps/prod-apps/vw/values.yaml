vw:
  global:
    fullnameOverride: vaultwarden
  defaultPodOptions:
    automountServiceAccountToken: false
    labels:
      application: vaultwarden
    securityContext:
      fsGroup: 1001
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/instance
              operator: In
              values:
              - vaultwarden-db
          topologyKey: kubernetes.io/hostname
  controllers:
    main:
      annotations:
        secrets.infisical.com/auto-reload: "true"
      containers:
        main:
          nameOverride: vaultwarden
          type: deployment
          image:
            repository: ghcr.io/dani-garcia/vaultwarden
            tag: "1.30.0"
            pullPolicy: IfNotPresent
          env:
            TZ: "America/New_York"
            DATA_FOLDER: data
          envFrom:
            - secretRef:
                name: vw-config-vars
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 96Mi

  service:
    main:
      nameOverride: vaultwarden
      extraSelectorLabels:
        application: vaultwarden
      ports:
        http:
          enabled: true
          port: 8080
          primary: true
          protocol: HTTP
        websocket:
          enabled: false
          port: 3012
          primary: false
          protocol: TCP

  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: le-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.pathmatcher: PathPrefix
        traefik.ingress.kubernetes.io/router.middlewares: traefik-security-headers@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls.options: traefik-tls13@kubernetescrd
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - host: vw.xtr.pub
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
      - hosts:
        - vw.xtr.pub
        secretName: tls-secret

  persistence:
    config:
      enabled: false
    vw-data:
      enabled: true
      type: persistentVolumeClaim
      storageClass: ceph-block-gold
      accessMode: ReadWriteOnce
      size: "96Mi"
      globalMounts:
        - path: /data

  networkpolicies:
    main:
      enabled: true
      controller: main
      podSelector:
        matchLabels:
          application: ghost
      policyTypes:
        - Ingress
        - Egress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    application: database
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/name: k8s-triliovault
          - from:
              - namespaceSelector:
                  matchLabels:
                    name: traefik
                podSelector:
                  matchLabels:
                     app.kubernetes.io/name: traefik
        egress:
          - to:
              - namespaceSelector: {}
                podSelector:
                  matchLabels:
                    k8s-app: kube-dns
            ports:
              - port: 53
                protocol: UDP
          - to:
              - podSelector:
                  matchLabels:
                    application: database

vw-db:
  global:
    fullnameOverride: vw-db
  defaultPodOptions:
    automountServiceAccountToken: false
    labels:
      application: database
    securityContext:
      fsGroup: 999
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: application
              operator: In
              values:
              - vaultwarden
          topologyKey: kubernetes.io/hostname

  controllers:
    main:
      type: statefulset
      strategy: OnDelete
      containers:
        main:
          annotations:
            reloader.stakater.com/auto: "true"
          nameOverride: db
          image:
            repository: mysql
            tag: "5.7.44"
            pullPolicy: IfNotPresent
          args:
            - "--ignore-db-dir=lost+found"
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
          env:
            TZ: "America/New_York"
            MYSQL_ROOT_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: vw-db
                  key: mysql-root-password
            MYSQL_DATABASE:
              valueFrom:
                secretKeyRef:
                  name: vw-db
                  key: mysql-database
            MYSQL_USER:
              valueFrom:
                secretKeyRef:
                  name: vw-db
                  key: mysql-user
            MYSQL_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: vw-db
                  key: mysql-password
          probes:
            startup:
              enabled: false
            liveness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                  - /bin/bash
                  - -ec
                  - |
                    password_aux="${MYSQL_ROOT_PASSWORD:-}"
                    mysqladmin status -uroot -p"${password_aux}"
                failureThreshold: 3
                initialDelaySeconds: 120
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
            readiness:
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                  - /bin/bash
                  - -ec
                  - |
                    password_aux="${MYSQL_ROOT_PASSWORD:-}"
                    mysqladmin status -uroot -p"${password_aux}"
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 125m
              memory: 256Mi

  persistence:
    config:
      enabled: false
    data:
      enabled: true
      type: persistentVolumeClaim
      storageClass: ceph-block-gold
      accessMode: ReadWriteOnce
      size: "2Gi"
      globalMounts:
        - path: /var/lib/mysql

  service:
    main:
      enabled: false
    db:
      enabled: true
      controller: main
      primary: true
      extraSelectorLabels:
        application: database
      ports:
        db:
          enabled: true
          port: 3306

  ingress:
    main:
      enabled: false

  networkpolicies:
    main:
      enabled: true
      controller: main
      podSelector:
        matchLabels:
          application: database
      policyTypes:
        - Ingress
        - Egress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    application: vaultwarden
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/name: k8s-triliovault
        egress:
          - to:
              - namespaceSelector: {}
                podSelector:
                  matchLabels:
                    k8s-app: kube-dns
            ports:
              - port: 53
                protocol: UDP
          - to:
              - podSelector:
                  matchLabels:
                    application: vaultwarden

backupTargets:
  &target backblaze-palebluedot:
    type: ObjectStore
    vendor: Other
    objectStoreCredentials:
      url: https://s3.us-west-000.backblazeb2.com
      bucketName: palebluedot-tvk
      region: us-west-000
      credentialSecret:
        name: *target
    thresholdCapacity: 25Gi

backupPlan:
  vw:
    backupTarget: *target
    backupPlanFlags:
      skipImageBackup: true
    policies:
      retention-policy:
        type: Retention
        spec:
          cleanupConfig:
            backupDays: 2
          default: false
          retentionConfig:
            dayOfWeek: Sunday
            weekly: 1
            latest: 5
      fullbackup-policy:
        type: Schedule
        spec:
          default: false
          scheduleConfig:
            schedule:
            - 10 4 * 1/3 *
      incremental-policy:
        type: Schedule
        spec:
          default: false
          scheduleConfig:
            schedule:
            - 15 4 * * *
    excludeResources:
      labelSelector:
      - matchExpressions:
        - key: tvk-skip-object
          operator: In
          values:
          - "true"
    backupHook: mysql
    hookConfig:
      mode: Sequential
      hooks:
        - hook:
            name: mysql-hook
          podSelector:
            labels:
              - matchLabels:
                  application: database

infisicalSecret:
  vw-db:
    syncInterval: 0
  vw-config-vars:
    syncInterval: 0
  *target:
    syncInterval: 900
    secretsPath: global