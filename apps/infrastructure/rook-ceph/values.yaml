rook-ceph:
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
rook-ceph-cluster:
  toolbox:
    enabled: true
  cephClusterSpec:
    mgr:
      count: 2
    dashboard:
      urlPrefix: /ceph-dashboard
      ssl: false
    crashCollector:
      daysToRetain: 14
    resources:
      mgr:
        limits:
          cpu: "1000m"
          memory: "1Gi"
        requests:
          cpu: "250m"
          memory: "512Mi"
      mon:
        limits:
          cpu: "2000m"
          memory: "2Gi"
        requests:
          cpu: "250m"
          memory: "1Gi"
      osd:
        limits:
          cpu: "2000m"
          memory: "4Gi"
        requests:
          cpu: "500m"
          memory: "4Gi"
      prepareosd:
        limits:
          cpu: "500m"
          memory: "400Mi"
        requests:
          cpu: "100m"
          memory: "50Mi"
      mgr-sidecar:
        limits:
          cpu: "500m"
          memory: "100Mi"
        requests:
          cpu: "100m"
          memory: "40Mi"
      crashcollector:
        limits:
          cpu: "500m"
          memory: "60Mi"
        requests:
          cpu: "75m"
          memory: "60Mi"
      logcollector:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "100m"
          memory: "100Mi"
      cleanup:
        limits:
          cpu: "500m"
          memory: "1Gi"
        requests:
          cpu: "125m"
          memory: "100Mi"
    storage:
      useAllNodes: true
      useAllDevices: false
      devices:
      - name: "sda1"
        config:
          deviceClass: hdd
      - name: "nvme0n1p4"
        config:
          deviceClass: nvme

  ingress:
    dashboard:
      host:
        name: mon.xtr.pub
        path: "/ceph-dashboard"
      tls:
        - hosts:
          - mon.xtr.pub
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
        ingress.kubernetes.io/protocol: http

  cephBlockPools:
    - name: replicated-metadata-pool-bronze
      spec:
        deviceClass: hdd
        replicated:
          size: 2
      storageClass:
        enabled: false
    - name: ec-data-pool-bronze
      # see https://github.com/rook/rook/blob/master/Documentation/ceph-pool-crd.md#spec for available configuration
      spec:
        deviceClass: hdd
        failureDomain: host
        erasureCoded:
          dataChunks: 2
          codingChunks: 1
      storageClass:
        enabled: true
        name: ceph-block-bronze
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        # see https://github.com/rook/rook/blob/master/Documentation/ceph-block.md#provision-storage for available configuration
        parameters:
          # To use erasure coded pool with TBD, we need two ppols.
          # one erasure-coded and one replicated
          # replicated pool defined in 'pool'
          # erasure-coded pool must be defined in 'dataPool' parameters
          pool: replicated-metadata-pool-bronze
          dataPool: ec-data-pool-bronze
          
          # (optional) mapOptions is a comma-separated list of map options.
          # For krbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options
          # For nbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options
          # mapOptions: lock_on_read,queue_depth=1024
    
          # (optional) unmapOptions is a comma-separated list of unmap options.
          # For krbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options
          # For nbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options
          # unmapOptions: force
    
          # RBD image format. Defaults to "2".
          imageFormat: "2"
          # RBD image features. Available for imageFormat: "2". CSI RBD currently supports only `layering` feature.
          imageFeatures: layering
          # The secrets contain Ceph admin credentials.
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          # Specify the filesystem type of the volume. If not specified, csi-provisioner
          # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
          # in hyperconverged settings where the volume is mounted on the same node as the osds.
          csi.storage.k8s.io/fstype: ext4

    - name: replicated-metadata-pool-gold
      spec:
        deviceClass: nvme
        replicated:
          size: 2
      storageClass:
        enabled: false
    - name: ec-data-pool-gold
      # see https://github.com/rook/rook/blob/master/Documentation/ceph-pool-crd.md#spec for available configuration
      spec:
        deviceClass: nvme
        failureDomain: host
        erasureCoded:
          dataChunks: 2
          codingChunks: 1
      storageClass:
        enabled: true
        name: ceph-block-gold
        isDefault: false
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        # see https://github.com/rook/rook/blob/master/Documentation/ceph-block.md#provision-storage for available configuration
        parameters:
          # To use erasure coded pool with TBD, we need two ppols.
          # one erasure-coded and one replicated
          # replicated pool defined in 'pool'
          # erasure-coded pool must be defined in 'dataPool' parameters
          pool: replicated-metadata-pool-gold
          dataPool: ec-data-pool-gold
          
          # (optional) mapOptions is a comma-separated list of map options.
          # For krbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options
          # For nbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options
          # mapOptions: lock_on_read,queue_depth=1024
    
          # (optional) unmapOptions is a comma-separated list of unmap options.
          # For krbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd/#kernel-rbd-krbd-options
          # For nbd options refer
          # https://docs.ceph.com/docs/master/man/8/rbd-nbd/#options
          # unmapOptions: force
    
          # RBD image format. Defaults to "2".
          imageFormat: "2"
          # RBD image features. Available for imageFormat: "2". CSI RBD currently supports only `layering` feature.
          imageFeatures: layering
          # The secrets contain Ceph admin credentials.
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          # Specify the filesystem type of the volume. If not specified, csi-provisioner
          # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
          # in hyperconverged settings where the volume is mounted on the same node as the osds.
          csi.storage.k8s.io/fstype: ext4


  cephBlockPoolsVolumeSnapshotClass:
    enabled: true
    name: ceph-block
    isDefault: true

  cephFileSystems:
    - name: ceph-filesystem-gold
      spec:
        metadataPool:
          deviceClass: nvme
          replicated:
            size: 3
        dataPools:
          - name: replicated-fs
            deviceClass: nvme
            replicated:
              size: 3
          - name: data0
            deviceClass: nvme
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
        metadataServer:
          activeCount: 1
          activeStandby: true
          placement:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/part-of
                    operator: In
                    values:
                    - ceph-filesystem-gold
                topologyKey: kubernetes.io/hostname
          resources:
            limits:
              cpu: "2"
              memory: "4Gi"
            requests:
              cpu: "500m"
              memory: "4Gi"
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem-gold
        pool: data0
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        mountOptions: []
        parameters:
          # The secrets contain Ceph admin credentials.
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          # Specify the filesystem type of the volume. If not specified, csi-provisioner
          # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
          # in hyperconverged settings where the volume is mounted on the same node as the osds.
          csi.storage.k8s.io/fstype: ext4

    - name: ceph-filesystem-bronze
      spec:
        metadataPool:
          deviceClass: hdd
          replicated:
            size: 3
        dataPools:
          - name: replicated-fs
            deviceClass: hdd
            replicated:
              size: 3
          - name: data0
            deviceClass: hdd
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
        metadataServer:
          activeCount: 1
          activeStandby: true
          placement:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/part-of
                    operator: In
                    values:
                    - ceph-filesystem-bronze
                topologyKey: kubernetes.io/hostname
          resources:
            limits:
              cpu: "2"
              memory: "4Gi"
            requests:
              cpu: "500m"
              memory: "4Gi"
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem-bronze
        pool: data0
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        mountOptions: []
        parameters:
          # The secrets contain Ceph admin credentials.
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          # Specify the filesystem type of the volume. If not specified, csi-provisioner
          # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
          # in hyperconverged settings where the volume is mounted on the same node as the osds.
          csi.storage.k8s.io/fstype: ext4
  cephObjectStores: {}
